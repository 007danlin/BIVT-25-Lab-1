name: .NET Tests & Auto-commit

on:
  pull_request:
    types: [opened, synchronize, reopened]

permissions:
  contents: write
  pull-requests: write

jobs:

  check-target:
    runs-on: ubuntu-latest
    steps:
      - name: üö´ –ü—Ä–æ–≤–µ—Ä–∫–∞ PR –≤ main
        run: |
          if [ "${{ github.event.pull_request.base.ref }}" = "main" ]; then
            echo "‚ùå –ù–µ–ª—å–∑—è –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å —Ä–∞–±–æ—Ç—É –≤ main –≤–µ—Ç–∫—É."
            exit 1
          else
            echo "‚úÖ PR –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω –≤ '${{ github.event.pull_request.base.ref }}', –º–æ–∂–Ω–æ –∑–∞–ø—É—Å–∫–∞—Ç—å —Ç–µ—Å—Ç—ã."
          fi

  tests:
    name: Run test
    runs-on: windows-latest
    needs: check-target
    if: success()   # —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ check-target –Ω–µ –∑–∞–≤–µ—Ä—à–∏–ª—Å—è —Å –æ—à–∏–±–∫–æ–π
    strategy:
      matrix:
        configuration: [Debug]

    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Install .NET Core
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x

    - name: Setup MSBuild.exe
      uses: microsoft/setup-msbuild@v2

    - name: Restore
      run: dotnet restore Lab1/Lab1.sln

    - name: Build
      run: dotnet build Lab1/Lab1.sln --configuration ${{ matrix.configuration }} --no-restore

    - name: Run tests (Purple‚ÜíBlue‚ÜíGreen‚ÜíWhite)
      id: cascade
      shell: pwsh
      run: |
        $colors = @('Purple', 'Blue', 'Green', 'White')
        foreach ($c in $colors) {
          Write-Host "üîé  –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ –∫–ª–∞—Å—Å–∞ $c"
          dotnet test Lab1test/Lab1test.csproj `
            --filter "FullyQualifiedName~$c" `
            --configuration $Env:CFG `
            --no-build `
            --logger "trx;LogFileName=test-$c.trx"
          if ($LASTEXITCODE -eq 0) {
            Write-Host "‚úÖ  –ö–ª–∞—Å—Å $c –ø—Ä–æ—à—ë–ª. –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–∞—Å–∫–∞–¥."
            exit 0
          }
        }
        Write-Host "‚ùå  –ù–∏ –æ–¥–∏–Ω –∫–ª–∞—Å—Å –Ω–µ –ø—Ä–æ—à—ë–ª."
        exit 1
      env:
        CFG: ${{ matrix.configuration }}

    - name: Upload TRX
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: trx-${{ matrix.configuration }}
        path: '**/test-results.trx'
